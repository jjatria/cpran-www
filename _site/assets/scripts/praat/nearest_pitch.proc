# Find closest real pitch value, both directionally or on
# absolute terms.
#
# Usage:
#    call nearestPitch TIME DELTA
#    pitch = nearestPitch.result
#    offset = nearestPitch.offset
#
# where TIME is a reference time value and DELTA is one of three
# possible values: -1 to search backwards from TIME, 1 to search
# forward from TIME, or 0 to search bidirectionally from TIME.
#
# A pitch object must be selected.
#
# This script is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
#
# A copy of the GNU General Public License is available at
# <http://www.gnu.org/licenses/>.

procedure nearestPitch .time .delta
    .result = Get value at time... .time Hertz Nearest
    .frame = Get frame number from time... .time
    .frame = floor(.frame + 0.5)
    .posOffset = 0
    .negOffset = 0
    .offset = 0
    .tiebreaker = 0
    .duration = Get total duration
    .foundForward = 0
    .startFrame = 1
    .endFrame = Get number of frames
    .error = 1

    if .time > .duration
        .error = -1
    elsif .time = 0 and .delta = -1
        .error = -2
    elsif time = duration and delta = 1
        .error = -2
    elsif time = 0 and delta = 0
        printline nearestPitch: Cannot perform bidirectional search from '.time'. Searching forward.
        delta = 1
    elsif time = duration and delta = 0
        printline nearestPitch: Cannot perform bidirectional search from '.time'. Searching backwards.
        delta = -1
    endif

    if .error = 0
        # printline Called with delta='.delta'
        while .result = undefined
            if .delta >= 0
                # print 'tab$'...searching forward... 
                .posOffset += 1
                .result = Get value in frame... .frame+.posOffset Hertz
                if .frame+.posOffset = .endFrame
                    .result = 0
                endif
                if .result = undefined
                    .foundForward = 0
                else
                    .foundForward = 1
                endif
                # printline '.result'
            endif
            if .delta <= 0
                # print 'tab$'...searching backwards... 
                .negOffset -= 1
                .result = Get value in frame... .frame+.negOffset Hertz
                if .frame+.negOffset = .startFrame
                    .result = 0
                endif
                # printline '.result'
            endif
        endwhile
        if abs(.posOffset) > abs(.negOffset)
            .offset = .posOffset
        elsif abs(posOffset) < abs(.negOffset)
            .offset = .negOffset
        elsif .foundForward
            .offset = .posOffset
        else
            .offset = .negOffset
        endif
    endif

    if !.result or error < 0
        .result = undefined
        .offset = undefined
    endif
endproc